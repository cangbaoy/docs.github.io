"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3644],{105:(t,e)=>{e.A=(t,e)=>{const a=t.__vccOpts||t;for(const[t,n]of e)a[t]=n;return a}},6537:(t,e,a)=>{a.r(e),a.d(e,{comp:()=>r,data:()=>c});var n=a(6904);const o=[(0,n.Lk)("h1",{id:"beanfactory-和-applicationcontext-有什么区别",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#beanfactory-和-applicationcontext-有什么区别"},[(0,n.Lk)("span",null,"BeanFactory 和 ApplicationContext 有什么区别")])],-1),(0,n.Lk)("ul",null,[(0,n.Lk)("li",null,"BeanFactory 可以理解为含有 bean 集合的工厂类。BeanFactory 包含了种 bean 的定义，以便在接收到客户端请求时将对应的 bean 实例化。"),(0,n.Lk)("li",null,"BeanFactory 还能在实例化对象的时生成协作类之间的关系。此举将 bean 自身与 bean 客户端的配置中解放出来。BeanFactory 还包含了 bean 生命周期的控制，调用客户端的初始化方法（initialization methods）和销毁方法（destruction methods）。"),(0,n.Lk)("li",null,[(0,n.eW)("从表面上看，ApplicationContext 如同 BeanFactory 一样具有 bean 定义、bean 关联关系的设置，根据请求分发 bean 的功能。但 ApplicationContext 在此基础上还提供了其他的功能： "),(0,n.Lk)("ul",null,[(0,n.Lk)("li",null,"提供了支持国际化的文本消息"),(0,n.Lk)("li",null,"统一的资源文件读取方式"),(0,n.Lk)("li",null,"已在监听器中注册的 bean 的事件")])])],-1)],i={},r=(0,a(105).A)(i,[["render",function(t,e){return(0,n.uX)(),(0,n.CE)("div",null,o)}]]),c=JSON.parse('{"path":"/exambook/Java-Spring1.html","title":"BeanFactory 和 ApplicationContext 有什么区别","lang":"zh-CN","frontmatter":{"description":"BeanFactory 和 ApplicationContext 有什么区别 BeanFactory 可以理解为含有 bean 集合的工厂类。BeanFactory 包含了种 bean 的定义，以便在接收到客户端请求时将对应的 bean 实例化。 BeanFactory 还能在实例化对象的时生成协作类之间的关系。此举将 bean 自身与 bean 客户...","head":[["meta",{"property":"og:url","content":"https://www.sansei.top/exambook/Java-Spring1.html"}],["meta",{"property":"og:site_name","content":"川上富江"}],["meta",{"property":"og:title","content":"BeanFactory 和 ApplicationContext 有什么区别"}],["meta",{"property":"og:description","content":"BeanFactory 和 ApplicationContext 有什么区别 BeanFactory 可以理解为含有 bean 集合的工厂类。BeanFactory 包含了种 bean 的定义，以便在接收到客户端请求时将对应的 bean 实例化。 BeanFactory 还能在实例化对象的时生成协作类之间的关系。此举将 bean 自身与 bean 客户..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-30T14:18:24.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-30T14:18:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"BeanFactory 和 ApplicationContext 有什么区别\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-30T14:18:24.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1725027504000,"updatedTime":1725027504000,"contributors":[{"name":"him","email":"yph0228@163.com","commits":1}]},"readingTime":{"minutes":0.71,"words":212},"filePathRelative":"exambook/Java-Spring1.md","localizedDate":"2024年8月30日","autoDesc":true}')}}]);