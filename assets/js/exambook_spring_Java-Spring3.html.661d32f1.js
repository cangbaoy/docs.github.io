"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5320],{105:(e,t)=>{t.A=(e,t)=>{const r=e.__vccOpts||e;for(const[e,n]of t)r[e]=n;return r}},5399:(e,t,r)=>{r.r(t),r.d(t,{comp:()=>i,data:()=>p});var n=r(6904);const o=[(0,n.Lk)("h1",{id:"spring-ioc-如何实现",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#spring-ioc-如何实现"},[(0,n.Lk)("span",null,"Spring IOC 如何实现")])],-1),(0,n.Lk)("ul",null,[(0,n.Lk)("li",null,[(0,n.eW)("Spring 中的 "),(0,n.Lk)("code",null,"org.springframework.beans"),(0,n.eW)(" 包和 "),(0,n.Lk)("code",null,"org.springframework.context"),(0,n.eW)(" 包构成了 Spring 框架 IoC 容器的基础。")]),(0,n.Lk)("li",null,"BeanFactory 接口提供了一个先进的配置机制，使得任何类型的对象的配置成为可能。ApplicationContext 接口对 BeanFactory（是一个子接口）进行了扩展，在 BeanFactory 的基础上添加了其他功能，比如与 Spring 的 AOP 更容易集成，也提供了处理 message resource 的机制（用于国际化）、事件传播以及应用层的特别配置，比如针对 Web 应用的 WebApplicationContext。"),(0,n.Lk)("li",null,[(0,n.Lk)("code",null,"org.springframework.beans.factory.BeanFactory"),(0,n.eW)(" 是 Spring IoC 容器的具体实现，用来包装和管理前面提到的各种 bean。BeanFactory 接口是 Spring IoC 容器的核心接口。")])],-1)],a={},i=(0,r(105).A)(a,[["render",function(e,t){return(0,n.uX)(),(0,n.CE)("div",null,o)}]]),p=JSON.parse('{"path":"/exambook/spring/Java-Spring3.html","title":"Spring IOC 如何实现","lang":"zh-CN","frontmatter":{"description":"Spring IOC 如何实现 Spring 中的 org.springframework.beans 包和 org.springframework.context 包构成了 Spring 框架 IoC 容器的基础。 BeanFactory 接口提供了一个先进的配置机制，使得任何类型的对象的配置成为可能。ApplicationContext 接口对 B...","head":[["meta",{"property":"og:url","content":"https://www.sansei.top/exambook/spring/Java-Spring3.html"}],["meta",{"property":"og:site_name","content":"川上富江"}],["meta",{"property":"og:title","content":"Spring IOC 如何实现"}],["meta",{"property":"og:description","content":"Spring IOC 如何实现 Spring 中的 org.springframework.beans 包和 org.springframework.context 包构成了 Spring 框架 IoC 容器的基础。 BeanFactory 接口提供了一个先进的配置机制，使得任何类型的对象的配置成为可能。ApplicationContext 接口对 B..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-31T15:43:24.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-31T15:43:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring IOC 如何实现\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-31T15:43:24.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1725119004000,"updatedTime":1725119004000,"contributors":[{"name":"him","email":"yph0228@163.com","commits":1}]},"readingTime":{"minutes":0.58,"words":175},"filePathRelative":"exambook/spring/Java-Spring3.md","localizedDate":"2024年8月31日","autoDesc":true}')}}]);