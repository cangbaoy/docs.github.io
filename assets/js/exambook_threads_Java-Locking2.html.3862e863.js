"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7081],{105:(e,t)=>{t.A=(e,t)=>{const o=e.__vccOpts||e;for(const[e,a]of t)o[e]=a;return o}},9492:(e,t,o)=>{o.r(t),o.d(t,{comp:()=>n,data:()=>r});var a=o(6904);const l=[(0,a.Lk)("h1",{id:"volatile-实现原理",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#volatile-实现原理"},[(0,a.Lk)("span",null,"volatile 实现原理")])],-1),(0,a.Lk)("ul",null,[(0,a.Lk)("li",null,[(0,a.eW)("在 JVM 底层 "),(0,a.Lk)("code",null,"volatile"),(0,a.eW)(" 是采用“内存屏障”来实现的")]),(0,a.Lk)("li",null,"缓存一致性协议（MESI协议）它确保每个缓存中使用的共享变量的副本是一致的。其核心思想如下：当某个 CPU 在写数据时，如果发现操作的变量是共享变量，则会通知其他 CPU 告知该变量的缓存行是无效的，因此其他 CPU 在读取该变量时，发现其无效会重新从主存中加载数据")],-1)],i={},n=(0,o(105).A)(i,[["render",function(e,t){return(0,a.uX)(),(0,a.CE)("div",null,l)}]]),r=JSON.parse('{"path":"/exambook/threads/Java-Locking2.html","title":"volatile 实现原理","lang":"zh-CN","frontmatter":{"description":"volatile 实现原理 在 JVM 底层 volatile 是采用“内存屏障”来实现的 缓存一致性协议（MESI协议）它确保每个缓存中使用的共享变量的副本是一致的。其核心思想如下：当某个 CPU 在写数据时，如果发现操作的变量是共享变量，则会通知其他 CPU 告知该变量的缓存行是无效的，因此其他 CPU 在读取该变量时，发现其无效会重新从主存中加载数据","head":[["meta",{"property":"og:url","content":"https://www.sansei.top/exambook/threads/Java-Locking2.html"}],["meta",{"property":"og:site_name","content":"川上富江"}],["meta",{"property":"og:title","content":"volatile 实现原理"}],["meta",{"property":"og:description","content":"volatile 实现原理 在 JVM 底层 volatile 是采用“内存屏障”来实现的 缓存一致性协议（MESI协议）它确保每个缓存中使用的共享变量的副本是一致的。其核心思想如下：当某个 CPU 在写数据时，如果发现操作的变量是共享变量，则会通知其他 CPU 告知该变量的缓存行是无效的，因此其他 CPU 在读取该变量时，发现其无效会重新从主存中加载数据"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-01T17:56:06.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-01T17:56:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"volatile 实现原理\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-01T17:56:06.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1725213366000,"updatedTime":1725213366000,"contributors":[{"name":"him","email":"yph0228@163.com","commits":1}]},"readingTime":{"minutes":0.44,"words":131},"filePathRelative":"exambook/threads/Java-Locking2.md","localizedDate":"2024年9月1日","autoDesc":true}')}}]);