"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8102],{105:(t,e)=>{e.A=(t,e)=>{const o=t.__vccOpts||t;for(const[t,r]of e)o[t]=r;return o}},8660:(t,e,o)=>{o.r(e),o.d(e,{comp:()=>c,data:()=>i});var r=o(6904);const a=[(0,r.Lk)("h1",{id:"netty-内部执行流程",tabindex:"-1"},[(0,r.Lk)("a",{class:"header-anchor",href:"#netty-内部执行流程"},[(0,r.Lk)("span",null,"Netty 内部执行流程")])],-1),(0,r.Lk)("ul",null,[(0,r.Lk)("li",null,"Netty 的接收和发送 ByteBuffer 采用 DIRECT BUFFERS，使用堆外直接内存进行 Socket 读写，不需要进行字节缓冲区的二次拷贝。如果使用传统的堆内存（HEAP BUFFERS）进行 Socket 读写，JVM 会将堆内存 Buffer 拷贝一份到直接内存中，然后才写入 Socket 中。相比于堆外直接内存，消息在发送过程中多了一次缓冲区的内存拷贝。"),(0,r.Lk)("li",null,"Netty 提供了组合 Buffer 对象，可以聚合多个 ByteBuffer 对象，用户可以像操作一个 Buffer 那样方便的对组合 Buffer 进行操作，避免了传统通过内存拷贝的方式将几个小 Buffer 合并成一个大的 Buffer。"),(0,r.Lk)("li",null,"Netty 的文件传输采用了 transferTo 方法，它可以直接将文件缓冲区的数据发送到目标 Channel，避免了传统通过循环 write 方式导致的内存拷贝问题。")],-1)],n={},c=(0,o(105).A)(n,[["render",function(t,e){return(0,r.uX)(),(0,r.CE)("div",null,a)}]]),i=JSON.parse('{"path":"/exambook/Java-Netty8.html","title":"Netty 内部执行流程","lang":"zh-CN","frontmatter":{"description":"Netty 内部执行流程 Netty 的接收和发送 ByteBuffer 采用 DIRECT BUFFERS，使用堆外直接内存进行 Socket 读写，不需要进行字节缓冲区的二次拷贝。如果使用传统的堆内存（HEAP BUFFERS）进行 Socket 读写，JVM 会将堆内存 Buffer 拷贝一份到直接内存中，然后才写入 Socket 中。相比于堆外...","head":[["meta",{"property":"og:url","content":"https://www.sansei.top/exambook/Java-Netty8.html"}],["meta",{"property":"og:site_name","content":"川上富江"}],["meta",{"property":"og:title","content":"Netty 内部执行流程"}],["meta",{"property":"og:description","content":"Netty 内部执行流程 Netty 的接收和发送 ByteBuffer 采用 DIRECT BUFFERS，使用堆外直接内存进行 Socket 读写，不需要进行字节缓冲区的二次拷贝。如果使用传统的堆内存（HEAP BUFFERS）进行 Socket 读写，JVM 会将堆内存 Buffer 拷贝一份到直接内存中，然后才写入 Socket 中。相比于堆外..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-30T14:18:24.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-30T14:18:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Netty 内部执行流程\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-30T14:18:24.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1725027504000,"updatedTime":1725027504000,"contributors":[{"name":"him","email":"yph0228@163.com","commits":1}]},"readingTime":{"minutes":0.79,"words":238},"filePathRelative":"exambook/Java-Netty8.md","localizedDate":"2024年8月30日","autoDesc":true}')}}]);